{"version":3,"sources":["styled/TicTacToe.js","containers/TicTacToe.js","utils/media.js","styled/Profile.js","containers/Profile.js","routes/index.js","styled/NavDrawer.js","components/NavDrawer.js","styled/Template.js","containers/Template.js","index.js"],"names":["Board","_ref","unit","size","rows","grid","i","position","push","react_default","a","createElement","ReactKonva","points","stroke","strokeWidth","key","Squares","_ref2","coordinates","gameState","win","gameOver","yourTurn","ownMark","move","squares","map","index","makeMove","mark","fill","includes","console","log","x","y","fontSize","width","text","fontFamily","align","onClick","event","target","TicTacToe","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","Array","otherMark","winner","marker","setState","prevState","splice","foundWin","winChecker","makeAiMove","openSquares","forEach","square","aiMove","random","length","setTimeout","min","max","Math","ceil","floor","combos","find","combo","_combo","slicedToArray","b","c","turingTest","recordGame","height","window","innerHeight","innerWidth","_this$state","TicTacToe_Board","TicTacToe_Squares","Component","media","css","_templateObject","apply","arguments","Container","styled","div","Profile_templateObject","_templateObject2","Name","h2","_templateObject3","GameListHeader","h4","_templateObject4","GameList","_templateObject5","GameRecord","_templateObject6","ColumnLabels","_templateObject7","Column","span","_templateObject8","Profile","email","user","records","games","game","createdAt","defaultProps","id","Routes","Route","exact","path","component","StayVisible","NavDrawer_templateObject","open","concat","NavToggleButton","Fab_default","toggleDrawer","Menu_default","NavDrawer","NavDrawer_NavToggleButton","Drawer_default","variant","style","backgroundColor","Divider_default","Link","to","MenuItem_default","Header","header","Template_templateObject","Template_templateObject2","Template_templateObject3","Main","Template_Container","children","Template","components_NavDrawer","Template_Main","client","ApolloClient","link","HttpLink","uri","cache","InMemoryCache","render","react_apollo_browser_umd","BrowserRouter","basename","containers_Template","routes","document","getElementById"],"mappings":"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","file":"static/js/main.dfc80616.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Layer, Line, Text} from 'react-konva'\r\n\r\nexport const Board = ({unit, size, rows}) => {\r\n\tlet grid = []\r\n\tlet stroke = 'grey'\r\n\tlet strokeWidth = 10\r\n\tfor (let i = 1; i < rows; i++) {\r\n\t\tlet position = unit * i\r\n\t\tgrid.push(\r\n\t\t\t<Line\r\n\t\t\t\tpoints={[position, 0, position, size]}\r\n\t\t\t\tstroke={stroke}\r\n\t\t\t\tstrokeWidth={strokeWidth}\r\n\t\t\t\tkey={i+'v'}\r\n\t\t\t/>\r\n\t\t)\r\n\t\tgrid.push(\r\n\t\t\t<Line\r\n\t\t\t\tpoints={[0, position, size, position]}\r\n\t\t\t\tstroke={stroke}\r\n\t\t\t\tstrokeWidth={strokeWidth}\r\n\t\t\t\tkey={i+'h'}\r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n\treturn (\r\n\t\t<Layer>\r\n\t\t\t{grid}\r\n\t\t</Layer>\r\n\t)\r\n}\r\n\r\nexport const Squares = ({\r\n\tunit,\r\n\tcoordinates,\r\n\tgameState,\r\n\twin,\r\n\tgameOver,\r\n\tyourTurn,\r\n\townMark,\r\n\tmove\r\n}) => {\r\n\tlet squares = coordinates.map( (position, index) => {\r\n\t\t\tlet makeMove = move\r\n\t\t\tlet mark = gameState[index]\r\n\t\t\tlet fill = 'black'\r\n\t\t\tif (win && win.includes(index)) {\r\n\t\t\t\tfill = 'lightgreen'\r\n\t\t\t}\r\n\t\t\tif (gameOver || !yourTurn || mark) {\r\n\t\t\t\tmakeMove = () => console.log(\"Can't make a move now!\")\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\t<Text\r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\tindex={index}\r\n\t\t\t\t\tx={position[0]}\r\n\t\t\t\t\ty={position[1]}\r\n\t\t\t\t\tfontSize={unit}\r\n\t\t\t\t\twidth={unit}\r\n\t\t\t\t\ttext={mark}\r\n\t\t\t\t\tfill={fill}\r\n\t\t\t\t\tfontFamily={'Helvetica'}\r\n\t\t\t\t\talign={'center'}\r\n\t\t\t\t\tonClick={(event)=>{\r\n\t\t\t\t\t\tlet index = event.target.index\r\n\t\t\t\t\t\tmakeMove(index, ownMark)\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t})\r\n\r\n\treturn (\r\n\t\t<Layer>\r\n\t\t\t{squares}\r\n\t\t</Layer>\r\n\t)\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Stage } from 'react-konva'\r\nimport { Board, Squares } from '../styled/TicTacToe'\r\n\r\nclass TicTacToe extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        // TODO: try to dynamically generate win combos\r\n        this.combos = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6],\r\n        ]\r\n    }\r\n\r\n    state = {\r\n        rows: 3,\r\n        gameState: new Array(9).fill(false),\r\n        ownMark: 'X',\r\n        otherMark: 'O',\r\n        gameOver: false,\r\n        yourTurn: true,\r\n        winner: false,\r\n        win: false\r\n    }\r\n\r\n    componentWillMount() {\r\n        let height = window.innerHeight\r\n        let width = window.innerWidth\r\n        let size = (height < width) ? height * .8 : width * .8\r\n        let rows = this.state.rows\r\n        let unit = size / rows\r\n        let coordinates = []\r\n        for (let y = 0; y < rows; y++) {\r\n            for (let x = 0; x < rows; x++) {\r\n                coordinates.push([x * unit, y * unit])\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            size,\r\n            rows,\r\n            unit,\r\n            coordinates\r\n        })\r\n    }\r\n\r\n    move = (index, marker) => {\r\n        this.setState( (prevState, props) => {\r\n            let {gameState, yourTurn, gameOver, winner} = prevState\r\n            yourTurn = !yourTurn\r\n            gameState.splice(index, 1, marker)\r\n            let foundWin = this.winChecker(gameState)\r\n            if (foundWin) {\r\n                winner = gameState[foundWin[0]]\r\n            }\r\n            if (foundWin || !gameState.includes(false)) {\r\n                gameOver = true\r\n            }\r\n            if (!yourTurn && !gameOver) {\r\n                this.makeAiMove(gameState)\r\n            }\r\n\r\n            return {\r\n                gameState,\r\n                yourTurn,\r\n                gameOver,\r\n                win: foundWin || false,\r\n                winner\r\n            }\r\n        })\r\n    }\r\n\r\n    makeAiMove = (gameState) => {\r\n        // TODO try to make AI smarter\r\n        let otherMark = this.state.otherMark\r\n        let openSquares = []\r\n        gameState.forEach((square, index) => {\r\n            if(!square) {\r\n                openSquares.push(index)\r\n            }\r\n        })\r\n        let aiMove = openSquares[this.random(0, openSquares.length)]\r\n        setTimeout(() => {\r\n            this.move(aiMove, otherMark)\r\n        }, 1000)\r\n    }\r\n\r\n    random = (min, max) => {\r\n        min = Math.ceil(min)\r\n        max = Math.floor(max)\r\n        return Math.floor(Math.random() * (max - min)) + min\r\n    }\r\n\r\n    winChecker = (gameState) => {\r\n        let combos = this.combos\r\n        return combos.find((combo) => {\r\n            let [a, b, c] = combo\r\n            return (gameState[a] === gameState[b]\r\n                && gameState[a] === gameState[c]\r\n                && gameState[a])\r\n        })\r\n    }\r\n\r\n    turingTest = () => {\r\n\r\n    }\r\n\r\n    recordGame = () => {\r\n\r\n    }\r\n\r\n    render() {\r\n        let {\r\n            size,\r\n            unit,\r\n            rows,\r\n            coordinates,\r\n            gameState,\r\n            win,\r\n            gameOver,\r\n            yourTurn,\r\n            ownMark\r\n        } = this.state\r\n        return (\r\n            <div>\r\n                <Stage\r\n                    width={size}\r\n                    height={size}\r\n                >\r\n                    <Board\r\n                        unit={unit}\r\n                        rows={rows}\r\n                        size={size}\r\n                    />\r\n                    <Squares\r\n                        unit={unit}\r\n                        coordinates={coordinates}\r\n                        gameState={gameState}\r\n                        win={win}\r\n                        gameOver={gameOver}\r\n                        yourTurn={yourTurn}\r\n                        ownMark={ownMark}\r\n                        move={this.move}\r\n                    />\r\n                </Stage>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TicTacToe\r\n","import {css} from 'styled-components'\r\n\r\nexport const media = {\r\n    handheld: (...args) => css`\r\n        @media (max-width: 800px) {\r\n            ${css(...args)}\r\n        }\r\n    `\r\n}","import {media} from '../utils/media'\r\nimport styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  border: 1px rgb(200,200,200) solid;\r\n  width: 800px;\r\n  min-height: 100vh;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  ${media.handheld`\r\n    width: 100%;\r\n  `}\r\n`\r\n\r\nexport const Name = styled.h2`\r\n  display: flex;\r\n`\r\n\r\nexport const GameListHeader = styled.h4`\r\n  display: flex;\r\n  padding-bottom: 2px;\r\n  margin: 10px 0 5px 0;\r\n`\r\n\r\nexport const GameList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 90%;\r\n  padding: 5px;\r\n  border: 1px lightgrey solid;\r\n  justify-content: center;\r\n`\r\n\r\nexport const GameRecord = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  width: 100%;\r\n  padding: 5px 0;\r\n  margin: 1px 0;\r\n  background-color: ${props=>(props.index % 2 === 1)? 'rgb(225,225,225)' : 'rgb(240,240,240)'};\r\n  box-sizing: border-box;\r\n`\r\n\r\nexport const ColumnLabels = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  width: 100%;\r\n  padding: 5px 0;\r\n  margin: 3px 0;\r\n  box-sizing: border-box;\r\n  font-weight: bold;\r\n`\r\n\r\nexport const Column = styled.span`\r\n  display: flex;\r\n  width: 25%;\r\n`\r\n","import React, { Component } from 'react'\r\nimport { Container, Name, GameListHeader, GameList, GameRecord, Column, ColumnLabels } from '../styled/Profile'\r\n\r\nclass Profile extends Component {\r\n\r\n    static defaultProps = {\r\n        user: {\r\n            email: 'USER_EMAIL',\r\n            games: [\r\n                {\r\n                    winner: true,\r\n                    createdAt: '02/20/2018',\r\n                    id: '0001'\r\n                },\r\n                {\r\n                    winner: true,\r\n                    createdAt: '02/21/2018',\r\n                    id: '0002'\r\n                },\r\n                {\r\n                    winner: true,\r\n                    createdAt: '02/22/2018',\r\n                    id: '0003'\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    // Will automatically fetch as soon as the component loads\r\n    get records() {\r\n        return this.props.user.games.map((game, index) => {\r\n            return (\r\n                <GameRecord\r\n                    key={index}\r\n                    index={index}\r\n                >\r\n                    <Column>\r\n                        {(game.winner) ? 'Won!' : 'Lost'}\r\n                    </Column>\r\n                    <Column>\r\n                        \"ROBOT\"\r\n                    </Column>\r\n                    <Column>\r\n                        \"N\"\r\n                    </Column>\r\n                    <Column>\r\n                        {game.createdAt}\r\n                    </Column>\r\n                </GameRecord>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let { email } = this.props.user\r\n        return (\r\n            <Container>\r\n                <Name>\r\n                    {email}\r\n                </Name>\r\n                <GameList>\r\n                    <GameListHeader>\r\n                        MyGames\r\n                    </GameListHeader>\r\n                    <ColumnLabels>\r\n                        <Column>\r\n                            Outcome\r\n                    </Column>\r\n                        <Column>\r\n                            Guess\r\n                    </Column>\r\n                        <Column>\r\n                            Guessed Correctly\r\n                    </Column>\r\n                        <Column>\r\n                            Date\r\n                    </Column>\r\n                    </ColumnLabels>\r\n                    {this.records}\r\n                </GameList>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile\r\n\r\n","import React from 'react'\r\nimport {Route} from 'react-router'\r\nimport TicTacToe from '../containers/TicTacToe'\r\nimport Profile from '../containers/Profile'\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <div>\r\n            <Route exact path='/' component={TicTacToe} />\r\n            <Route exact path='/home' component={TicTacToe} />\r\n            <Route path={'/profile'} component={Profile} />\r\n        </div>\r\n    )\r\n}\r\n\r\n// const Routes = createRoutes()\r\n\r\nexport default Routes","import React from 'react' \r\nimport styled from 'styled-components'\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Menu from '@material-ui/icons/Menu'\r\n\r\nconst StayVisible = styled.div`\r\n    position: absolute;\r\n    margin-left: ${\r\n        (props) => \r\n            (props.open)\r\n            ? `${props.width}px`\r\n            : 'none'\r\n    }\r\n    transition: margin .2s;\r\n`\r\n\r\nexport const NavToggleButton = (props) => {\r\n    return (\r\n        <StayVisible\r\n            {...props}\r\n        >\r\n            <Fab\r\n                onClick={props.toggleDrawer}\r\n            >\r\n                <Menu />\r\n            </Fab>\r\n        </StayVisible>\r\n    )\r\n}","// import React, { Component } from 'react'\r\n// import Drawer from '@material-ui/core/Drawer'\r\n// import MenuItem from '@material-ui/core/MenuItem'\r\n// import Divider from '@material-ui/core/Divider'\r\n// import { Link } from 'react-router-dom'\r\n// import { NavToggleButton } from '../styled/NavDrawer'\r\n\r\n// class NavDrawer extends Component {\r\n//     state = {\r\n//         open: true,\r\n//         width: 250\r\n//     }\r\n\r\n//     toggleDrawer = () => {\r\n//         this.setState((prevState, props) => {\r\n//             return {\r\n//                 open: !prevState.open\r\n//             }\r\n//         })\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 <NavToggleButton\r\n//                     toggleDrawer={this.toggleDrawer}\r\n//                     width={this.state.width}\r\n//                     open={this.state.open}\r\n//                 />\r\n//                 <Drawer \r\n//                     open={this.state.open}\r\n//                     width={this.state.width}>\r\n//                     <div\r\n//                         style={{\r\n//                             height: \"200px\",\r\n//                             width: '100%',\r\n//                             backgroundColor: 'salmon'\r\n//                         }}>\r\n\r\n//                     </div>\r\n//                     <Divider />\r\n//                     <Link to={'/'}>\r\n//                         <MenuItem onClick={this.toggleDrawer}>\r\n//                             Play\r\n//                         </MenuItem>\r\n//                     </Link>\r\n//                     <Link to={'/profile'}>\r\n//                         <MenuItem onClick={this.toggleDrawer}>\r\n//                             Profile\r\n//                     </MenuItem>\r\n//                     </Link>\r\n//                 </Drawer>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// export default NavDrawer\r\n\r\nimport React, { Component } from 'react'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport { Link } from 'react-router-dom'\r\nimport { NavToggleButton } from '../styled/NavDrawer'\r\n\r\nclass NavDrawer extends Component {\r\n    state = {\r\n        open: true,\r\n        width: 80\r\n    }\r\n\r\n    toggleDrawer = () => {\r\n        this.setState((prevState, props) => {\r\n            return {\r\n                open: !prevState.open\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavToggleButton\r\n                    toggleDrawer={this.toggleDrawer}\r\n                    width={this.state.width}\r\n                    open={this.state.open}\r\n                />\r\n                <Drawer \r\n                    open={this.state.open}\r\n                    width={this.state.width}\r\n                    variant='persistent'>\r\n                    <div\r\n                        style={{\r\n                            height: \"200px\",\r\n                            width: '100%',\r\n                            backgroundColor: 'salmon'\r\n                        }}>\r\n\r\n                    </div>\r\n                    <Divider />\r\n                    <Link to={'/'}>\r\n                        <MenuItem onClick={this.toggleDrawer}>\r\n                            Play\r\n                        </MenuItem>\r\n                    </Link>\r\n                    <Link to={'/profile'}>\r\n                        <MenuItem onClick={this.toggleDrawer}>\r\n                            Profile\r\n                    </MenuItem>\r\n                    </Link>\r\n                </Drawer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavDrawer","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {media} from '../utils/media'\r\n\r\nexport const Header = styled.header`\r\n    text-align: center;\r\n    font-size: 2em;\r\n    font-family: 'Roboto', sans-serif;\r\n`\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin: auto;\r\n    width: 80%\r\n    min-height: 80vh;\r\n    font-family: 'Roboto', sans-serif;\r\n    ${media.handheld`\r\n        width: 100%;\r\n    `}\r\n`\r\n\r\nexport const Main = (props) => {\r\n    return (\r\n        <Container>\r\n            {props.children}\r\n        </Container>\r\n    )\r\n}","import React, { Component } from 'react'\r\n// import { Link } from 'react-router-dom'\r\n// import { withRouter } from 'react-router'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport NavDrawer from '../components/NavDrawer'\r\nimport {Header, Main} from '../styled/Template'\r\n\r\nclass Template extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavDrawer/>\r\n                <Header>\r\n                    TicTacTuring\r\n                </Header>\r\n                <Main>\r\n                    {this.props.children}\r\n                </Main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Template","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\nimport Routes from './routes'\r\nimport Template from './containers/Template'\r\n\r\nimport { ApolloProvider } from 'react-apollo'\r\nimport { ApolloClient } from 'apollo-client'\r\nimport { HttpLink } from 'apollo-link-http'\r\nimport { InMemoryCache } from 'apollo-cache-inmemory'\r\n\r\n\r\nconst client = new ApolloClient({\r\n    link: new HttpLink({uri: 'https://api.graph.cool/simple/v1/cjs5hdfph3n370154h4u587p5'}),\r\n    cache: new InMemoryCache()\r\n})\r\n\r\nrender (\r\n    <ApolloProvider client={client}>\r\n        <Router basename='/'>\r\n            <div>\r\n                <Template >\r\n                    <Routes />\r\n                </Template>\r\n            </div>\r\n        </Router>\r\n    </ApolloProvider>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}